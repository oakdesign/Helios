<Application x:Class="GadrocsWorkshop.Helios.ControlCenter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="{x:Type CheckBox}" x:Key="HeliosSwitchStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Image x:Name="ButtonImage" Source="ControlCenterPowerOff.png" Width="32" Margin="0,-15,0,-15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="ControlCenterPower.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HeliosRoundPushButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Name="ButtonImage" Source="ControlCenterDelete.png" Stretch="Fill" />
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="ControlCenterDeletePressed.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HeliosPushButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Name="ButtonImage" Source="ControlCenterButton.png" Stretch="Fill" />
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="ControlCenterButtonPressed.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HeliosCautionButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Name="ButtonImage" Source="ControlCenterCautionButton.png" Stretch="Fill" />
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="ControlCenterCautionButtonPressed.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HeliosPrevButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Name="ButtonImage" Source="PrevButton.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="PrevButtonPressed.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HeliosNextButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Name="ButtonImage" Source="NextButton.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="NextButtonPressed.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseDisplayText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Franklin Gothic Book"/>
            <Setter Property="Foreground" Value="#FF79CC87"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseLabel" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontFamily" Value="Franklin Gothic"/>
            <Setter Property="Foreground" Value="#FFF8F5F5"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <Style x:Key="FillWithFontColor" TargetType="Rectangle">
            <Setter Property="Fill" Value="#FFF8F5F5"/>
        </Style>

        <Style x:Key="BorderInFontColor" TargetType="Border">
            <Setter Property="BorderBrush" Value="#FFF8F5F5"/>
        </Style>

        <Style x:Key="ButtonLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="TopLabel" TargetType="TextBlock" BasedOn="{StaticResource ButtonLabel}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,20,0,10"/>
        </Style>

        <Style x:Key="UpLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
            <Setter Property="FontSize" Value="10"/>
        </Style>

        <Style x:Key="DownLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
            <Setter Property="FontSize" Value="10"/>
        </Style>

        <Style x:Key="CanvasLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseLabel}">
            <Setter Property="FontSize" Value="24"/>
        </Style>   

        <!-- styles used in Share dialog and other dialogs shared with Profile Editor REVISIT: move to HeliosResources merged resources -->
        <Style x:Key="Documentation" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="InterfaceEditorButton" TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="24"/>
        </Style>
        <SolidColorBrush x:Key="EmptySpaceBetweenWhiteItems" Color="LightGray"/>
        <Style x:Key="Heading1" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="Heading1Label" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="Heading2" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="Heading2Label" TargetType="Label">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="Heading3" TargetType="TextBlock">
        </Style>
    </Application.Resources>
    <JumpList.JumpList>
        <JumpList ShowRecentCategory="False" ShowFrequentCategory="True">
            <JumpTask Title="Exit Control Center"
                      Description="Exit Control Center"
                      IconResourceIndex="-1"
                      Arguments="--exit" />
        </JumpList>
    </JumpList.JumpList>
</Application>
